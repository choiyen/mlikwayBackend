name: 배포

on:
  push:
    branches: ["master"]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📦 소스코드 체크아웃
        uses: actions/checkout@v3

      - name: ☕ JDK 17 설정
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: 🛠 Gradle Wrapper 실행 권한 부여
        run: chmod +x gradlew

      - name: ⚙️ Gradle 빌드 실행
        run: ./gradlew build --info --stacktrace

      - name: 🧪 테스트 실패시 리포트 업로드
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: build/reports/tests/test

      - name: 🔐 도커허브 로그인
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_USER_PW }}

      - name: 🧱 도커 이미지 빌드
        run: docker build -t ${{ secrets.DOCKER_USER_NAME }}/${{ secrets.DOCKER_IMAGE_NAME }} --no-cache .

      - name: 📤 도커 이미지 푸시
        run: docker push ${{ secrets.DOCKER_USER_NAME }}/${{ secrets.DOCKER_IMAGE_NAME }}

      - name: 🚀 EC2에 SSH 접속 후 배포
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_IP }}
          port: 22
          username: ubuntu
          key: ${{ secrets.AWS_KEY }}
          script: |
            echo "${{ secrets.DOCKER_USER_PW }}" | docker login -u "${{ secrets.DOCKER_USER_NAME }}" --password-stdin

            cd ~/mlikyway

            cat <<EOF > .env
SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}
SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}
SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}
SPRING_SECURITY_USER=${{ secrets.SPRING_SECURITY_USER }}
SPRING_SECURITY_PASSWORD=${{ secrets.SPRING_SECURITY_PASSWORD }}
SPRING_SECURITY_ENCRYPT_KEY=${{ secrets.SPRING_SECURITY_ENCRYPT_KEY }}
SPRING_CREDENTIALS_ACCESSKEY=${{ secrets.SPRING_CREDENTIALS_ACCESSKEY }}
SPRING_CREDENTIALS_SECRETKEY=${{ secrets.SPRING_CREDENTIALS_SECRETKEY }}
SPRING_CREDENTIALS_BUCKETNAME=${{ secrets.SPRING_CREDENTIALS_BUCKETNAME }}
SPRING_SECRET_URL=${{ secrets.SPRING_SECRET_URL }}
EOF

            docker pull ${{ secrets.DOCKER_USER_NAME }}/${{ secrets.DOCKER_IMAGE_NAME }}
            docker-compose down
            docker-compose --env-file .env up -d --build
